acf(e4, xlim = c(1,6), col = "red", lwd = 2)
gls(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, data = by.year, correlation = corAR1)
library("nlme", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
gls(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, data = by.year, correlation = corAR1)
gls(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, data = by.year, correlation = corAR1())
gls(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, data = by.year, na.action = na.omit, correlation = corAR1())
by.year
View(by.year)
by.year$id <- NULL
ts <- ts(data = by.year)
plot(ts)
View(by.year)
install.packages("orcutt")
library("orcutt", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
cochrane.orcutt(lm.confinan3)
install.packages("panelAR")
library("panelAR", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
panelAR(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, panelVar = NULL, timeVar = year)
panelAR(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, panelVar = NULL, timeVar = year, data = by.year)
panelAR(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, panelVar = NULL, timeVar = "year", data = by.year)
panelAR(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, panelVar = NULL, timeVar = 'year', data = by.year)
panelAR(n.confinan ~ fulltime100 + repub100 + degreelt50100, panelVar = NULL, timeVar = 'year', data = by.year)
View(by.year)
dimnames(by.year)
names(dimnames(by.year))
View(by.year)
rownames(by.year)
row.names(by.year) <- by.year$year
row.names(by.year)
View(by.year)
panelAR(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, panelVar = NULL, timeVar = 'year', data = by.year)
panelAR(n.confinan ~ fulltime100 + repub100 + degreelt50100 + year, panelVar = NULL, timeVar = 'year', data = by.year, complete.case = TRUE)
cochrane.orcutt(lm.confinan3)
cols <- rainbow(4)
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
par(mfrow = c(1,3))
for(i in 1:3){
plotByYear(plot.vars[i], plot.cols[i], data = by.year)
}
par(mfrow = c(1,1))
plotByYear <- function(varname, color = "black", title = NULL, data){
dd <- data[,c("year",varname)]
plot(dd,
type = "l", bty = "l",
lwd = 2, col = color,
main = title)
}
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
par(mfrow = c(1,3))
for(i in 1:3){
plotByYear(plot.vars[i], plot.cols[i], data = by.year)
}
par(mfrow = c(1,1))
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
par(mfrow = c(3,1))
for(i in 1:3){
plotByYear(plot.vars[i], plot.cols[i], data = by.year)
}
par(mfrow = c(1,1))
plotByYear <- function(varname, color = "black", title = NULL, data, ...){
dd <- data[,c("year",varname)]
plot(dd,
type = "l", bty = "l",
lwd = 2, col = color,
main = title, ...)
}
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
par(mfrow = c(3,1))
for(i in 1:3){
plotByYear(plot.vars[i], plot.cols[i], data = by.year, xlab = NULL)
}
par(mfrow = c(1,1))
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
par(mfrow = c(3,1))
for(i in 1:3){
plotByYear(plot.vars[i], plot.cols[i], data = by.year, xlab = "")
}
par(mfrow = c(1,1))
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
par(mfrow = c(3,1))
for(i in 1:3){
plotByYear(plot.vars[i], plot.cols[i], data = by.year, xlab = "", ylab = "", title = plot.vars[i])
}
par(mfrow = c(1,1))
plotByYear <- function(varname, color = "black", title = NULL, data, add = FALSE, ...){
plotFun <- ifelse(add == FALSE, "plot", "lines")
dd <- data[,c("year",varname)]
do.call(plotFun, args = list(x = dd, type = "l", lwd = 2, col = color, main = title, ...))
#   plot(dd,
#        type = "l", bty = "l",
#        lwd = 2, col = color,
#        main = title, ...)
}
plotByYear("fulltime100", "turquoise4", "Pct working full-time", data = by.year)
plotByYear("repub100", "darkred", "Pct strong republican", data = by.year, add = T)
plotByYear("repub100", "darkred", "Pct strong republican", data = by.year)
plotByYear("degreelt50100", "purple4", "Pct under 50 with BA+", data = by.year)
plotByYear("repub100", "darkred", "Pct strong republican", data = by.year, add = T)
plotByYear("repub100", "darkred", "Pct strong republican", data = by.year, xlab= "")
plotByYear <- function(varname, color = "black", title = NULL, data, add = FALSE, ...){
plotFun <- ifelse(add == FALSE, "plot", "lines")
dd <- data[,c("year",varname)]
do.call(plotFun, args = list(x = dd, type = "l", lwd = 2, col = color, main = title, ...))
}
plotByYear("fulltime100", "turquoise4", "Pct working full-time", data = by.year)
plotByYear("repub100", "darkred", "Pct strong republican", data = by.year)
plotByYear("degreelt50100", "purple4", "Pct under 50 with BA+", data = by.year)
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
par(mfrow = c(3,1))
for(i in 1:3){
add <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i],
data = by.year,
xlab = "", ylab = "",
title = plot.vars[i], add = add)
}
par(mfrow = c(1,1))
par(mfrow = c(3,1))
for(i in 1:3){
add <- ifelse(i == 1, F, T)
print(add)
plotByYear(plot.vars[i], plot.cols[i],
data = by.year,
xlab = "", ylab = "",
title = plot.vars[i], add = add)
}
par(mfrow = c(1,1))
par(mfrow = c(3,1))
for(i in 1:3){
plotByYear(plot.vars[i], plot.cols[i],
data = by.year,
xlab = "", ylab = "",
title = plot.vars[i])
}
par(mfrow = c(1,1))
par(mfrow = c(1,1))
plot(NULL, ylim = c(0, 60), xlim = range(by.year$year))
for(i in 1:3){
add <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylim = c(0,60), add = add)
}
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,60), add = ADD)
}
plotByYear <- function(varname, color = "black", title = NULL, data, add = FALSE, ...){
plotFun <- ifelse(add == FALSE, "plot", "lines")
dd <- data[,c("year",varname)]
do.call(plotFun, args = list(x = dd, type = "l", bty = "l", lwd = 2, col = color, main = title, ...))
}
plotByYear("fulltime100", "turquoise4", "Pct working full-time", data = by.year)
plotByYear("repub100", "darkred", "Pct strong republican", data = by.year)
plotByYear("degreelt50100", "purple4", "Pct under 50 with BA+", data = by.year)
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
par(mfrow = c(3,1))
for(i in 1:3){
plotByYear(plot.vars[i], plot.cols[i],
data = by.year,
xlab = "", ylab = "",
title = plot.vars[i])
}
par(mfrow = c(1,1))
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,60), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, bty = "n")
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,60), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n")
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,60), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n", ncol = 3)
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,70), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n")
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,70), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n", seg.len = 1, ncol = 3)
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n", seg.len = 1, ncol = 3, outer = T)
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,70), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n", seg.len = 1, ncol = 3, text.width = 15)
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,70), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n", seg.len = 1, ncol = 2)
par(mfrow = c(1,1))
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "", ylim = c(0,100), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n", seg.len = 1)
par(mfrow = c(1,1))
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "%", ylim = c(0,100), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n", seg.len = 1)
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "Percent", ylim = c(0,100), add = ADD)
}
legend("top", legend = plot.vars, col = plot.cols, lwd = 2, bty = "n", seg.len = 1)
plotByYear <- function(varname, color = "black", title = NULL, data, add = FALSE, ...){
plotFun <- ifelse(add == FALSE, "plot", "lines")
dd <- data[,c("year", varname)]
argsList <- list(x = dd, type = "l", bty = "l", lwd = 2, col = color, main = title, ...)
do.call(plotFun, args = argsList)
}
plotByYear("fulltime100", "turquoise4", "Pct working full-time", data = by.year)
plotByYear <- function(data, varname, color = "black", title = NULL, add = FALSE, ...){
plotFun <- ifelse(add == FALSE, "plot", "lines")
dd <- data[,c("year", varname)]
argsList <- list(x = dd, type = "l", bty = "l", lwd = 2, col = color, main = title, ...)
do.call(plotFun, args = argsList)
}
plotByYear <- function(data, varname, color = "black", title = NULL, add = FALSE, ...){
plotFun <- ifelse(add == FALSE, "plot", "lines")
dd <- data[,c("year", varname)]
argsList <- list(x = dd, type = "l", bty = "l", lwd = 2, col = color, main = title, ...)
do.call(plotFun, args = argsList)
}
plotByYear(by.year, "fulltime100", "turquoise4", "Pct working full-time")
plotByYear(by.year, "repub100", "darkred", "Pct strong republican")
plotByYear(by.year, "degreelt50100", "purple4", "Pct under 50 with BA+")
par(mfrow = c(1,1))
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(plot.vars[i], plot.cols[i], data = by.year, ylab = "Percent", ylim = c(0,100), add = ADD)
}
legend("top", legend = c("Work Full-Time", "Strong Republican", "<50 with BA"), col = plot.cols, lwd = 2, bty = "n", seg.len = 1)
plotByYear <- function(data, varname, color = "black", title = NULL, add = FALSE, ...){
plotFun <- ifelse(add == FALSE, "plot", "lines")
dd <- data[,c("year", varname)]
argsList <- list(x = dd, type = "l", bty = "l", lwd = 2, col = color, main = title, ...)
do.call(plotFun, args = argsList)
}
plotByYear(by.year, "fulltime100", "turquoise4", "Pct working full-time")
plotByYear(by.year, "repub100", "darkred", "Pct strong republican")
plotByYear(by.year, "degreelt50100", "purple4", "Pct under 50 with BA+")
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.cols <- rainbow(3)
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.colors <- rainbow(3)
par(mfrow = c(3,1))
for(i in 1:3){
plotByYear(plot.vars[i], plot.colors[i],
data = by.year,
xlab = "", ylab = "",
title = plot.vars[i])
}
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.colors <- c("purple4", "orangered", "turquoise4")
par(mfrow = c(3,1))
for(i in 1:3){
plotByYear(plot.vars[i], plot.colors[i],
data = by.year,
xlab = "", ylab = "",
title = plot.vars[i])
}
par(mfrow = c(1,1))
plotByYear(by.year, "degreelt50100", "turquoise4", "Pct under 50 with BA+")
plotByYear(by.year, "repub100", "orangered", "Pct strong republican")
plotByYear(by.year, "fulltime100", "purple4", "Pct working full-time")
par(mfrow = c(3,1))
plot.vars <- c("fulltime100", "repub100", "degreelt50100")
plot.colors <- c("purple4", "orangered", "turquoise4")
for(i in 1:3){
plotByYear(plot.vars[i], plot.colors[i],
data = by.year,
xlab = "", ylab = "",
title = plot.vars[i])
}
par(mfrow = c(1,1))
par(mfrow = c(1,1))
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(by.year, plot.vars[i], plot.colors[i],
ylab = "Percent", ylim = c(0,100),
add = ADD)
}
legend("top", legend = c("Work Full-Time", "Strong Republican", "<50 with BA"), col = plot.cols, lwd = 2, bty = "n", seg.len = 1)
legend("top", legend = c("Work Full-Time", "Strong Republican", "<50 with BA"),
col = plot.colors, lwd = 2, bty = "n", seg.len = 1)
par(mfrow = c(1,1))
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(by.year, plot.vars[i], plot.colors[i],
ylab = "Percent", ylim = c(0,100),
add = ADD)
}
legend("top", legend = c("Work Full-Time", "Strong Republican", "<50 with BA"),
col = plot.colors, lwd = 2, bty = "n", seg.len = 1)
View(by.yearD)
by.yearFD <- summarise(by.year,
n.confinan = diff(n.confinan),
fulltime100 = diff(fulltime100),
repub100 = diff(repub100),
degreelt50100 = diff(degreelt50100),
year = year)
# get means by year
vars2 <- c("conclerg", "n.confinan", "fulltime", "attend", "pray", "degreelt50", "cohort",
"homosex", "marriedlt50", "sex", "kidslt18", "age", "realinc", "married", "divlaw",
"polviews", "babies", "preteen", "teens", "wrkstat", "womenft", "degree", "partyid6",
"partyid7", "divlaw1")
by.year <- aggregate(sub[, vars2], list(year = sub$year), mean, na.rm = T)
# interpolate
by.year[30:40, "year"] <- c(1979, 1981, 1992, 1995, seq(1997, 2009, 2))
vars.omit <- c("wrkstat", "divlaw1", "babies", "preteen", "teens")
for(VAR in setdiff(vars2, vars.omit)){
interpolate <- with(by.year, approx(year, get(VAR), method = "linear", xout = by.year[30:40, "year"]))
by.year[30:40, paste(VAR)] <- interpolate$y
}
by.year <- arrange(by.year, year)
by.year <- subset(by.year, year <= 1992)
by.year <- mutate(by.year,
repub = partyid6 + partyid7,
fulltime100 = fulltime*100,
repub100 = repub*100,
degreelt50100 = degreelt50*100)
plotByYear(by.year, "fulltime100", "purple4", "Pct working full-time")
plotByYear(by.year, "repub100", "orangered", "Pct strong republican")
plotByYear(by.year, "degreelt50100", "turquoise4", "Pct under 50 with BA+")
par(mfrow = c(1,1))
for(i in 1:3){
ADD <- ifelse(i == 1, F, T)
plotByYear(by.year, plot.vars[i], plot.colors[i],
ylab = "Percent", ylim = c(0,100),
add = ADD)
}
legend("top", legend = c("Work Full-Time", "Strong Republican", "<50 with BA"),
col = plot.colors, lwd = 2, bty = "n", seg.len = 1)
by.yearFD <- summarise(by.year,
n.confinan = diff(n.confinan),
fulltime100 = diff(fulltime100),
repub100 = diff(repub100),
degreelt50100 = diff(degreelt50100),
year = year)
install.packages("quantmod")
getMethods(Lag)
library("quantmod", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
getMethods("Lag")
getMethods(Lag)
Lag
showMethods("Lag")
Lag
Lag.data.frame
getMethods(Lag)
getMethods("Lag")
findMethods("Lag",)
findMethods("Lag")
findMethods("Lag", package = "quantmod")
methods("Lag")
quantmod:::Lag.data.frame
quantmod:::Lag.numeric
x <- c(1,2,3)
new.x <- c(rep(NA, 1), x[-((length(x) - 1 + 1):length(x))])
new.x
x – lag(x, k=-1)
x - lag(x, k = -1)
lag(x, k = -1)
df <- data.frame(id = rep(1:3, each = 3), X1 = sample(20, 9, rep = T))
df
df$diff <- unlist(by(df$X1 , list(df$id) , function(i) c(NA,diff(i))))
df
df$diff2 <- ave(df$X1 , df$id , FUN=function(i) c(NA,diff(i)))
df
firstDiff <- function(var, group, data){
G <- list(data$group)
V <- data$var
fun <- function(k){ c(NA, diff(k)) }
D.var <- unlist(by(V,G,fun))
D.var
}
df
df$diff3 <- firstDiff(X1, id, df)
firstDiff <- function(var, group, data){
G <- list(data[,deparse(substitute(group))])
V <- data[,deparse(substitute(var))]
fun <- function(k){ c(NA, diff(k)) }
D.var <- unlist(by(V,G,fun))
D.var
}
df$diff3 <- firstDiff(X1, id, df)
df
firstDiff <- function(var, group, data){
G <- list(data[,deparse(substitute(group))])
V <- data[,deparse(substitute(var))]
fun <- function(k){ c(NA, diff(k)) }
D.var <- unlist(by(V,G,fun))
D.var
}
df$diff3 <- firstDiff(X1, id, df)
df
df$diff3 <- firstDiff("X1", "id", df)
library
df <- data.frame(id = rep(1:3, each = 3), X = rpois(9, 10))
firstD <- function(var, group, data){
G <- list(data[,deparse(substitute(group))])
V <- data[,deparse(substitute(var))]
fun <- function(k){ c(NA, diff(k)) }
D.var <- unlist(by(V,G,fun))
D.var
}
df$Xdiff <- firstD(X, id, df)
df
firstD <- function(var, group, data){
V <- data[,deparse(substitute(var))]
G <- list(data[,deparse(substitute(group))])
G <- list(G)
fun <- function(j){ c(NA, diff(j)) }
D.var <- by(V, G, fun)
unlist(D.var)
}
df <- data.frame(id = rep(1:3, each = 3), X = rpois(9, 10))
df$Xdiff <- firstD(X, id, df)
firstD <- function(var, group, data){
V <- data[,deparse(substitute(var))]
G <- data[,deparse(substitute(group))]
G <- list(G)
fun <- function(j){ c(NA, diff(j)) }
D.var <- by(V, G, fun)
unlist(D.var)
}
df <- data.frame(id = rep(1:3, each = 3), X = rpois(9, 10))
df$Xdiff <- firstD(X, id, df)
df
df <- data.frame(id = c(1,2,1,3,1,2,2,3,3,), X = rpois(9, 10))
df <- data.frame(id = c(1,2,1,3,1,2,2,3,3), X = rpois(9, 10))
df$Xdiff <- firstD(X, id, df)
df
arrange(df, id)
df <- data.frame(id = c(1,2,1,3,1,2,2,3,3), X = rpois(9, 10))
arrange(df, id)
count
x <- c(1,2,3)
id_var(x)
id(.(x))
id
firstD <- function(var, group, df){
bad <- (!missing(group) & missing(df)) | (missing(group) & !missing(df))
if (bad) stop("group and df must either both be missing or both be specified")
fD <- function(j){ c(NA, diff(j)) }
var.is.alone <- missing(group) & missing(df)
if (var.is.alone) {
return(fD(var))
}
V <- data[, deparse(substitute(var))]
G <- data[, deparse(substitute(group))]
G <- list(G)
D.var <- by(V, G, fD)
unlist(D.var)
}
df <- data.frame(id = rep(1:3, each = 3), X = rpois(9, 10))
df$Xdiff <- firstD(X, id, df)
firstD <- function(var, group, df){
bad <- (!missing(group) & missing(df)) | (missing(group) & !missing(df))
if (bad) stop("group and df must either both be missing or both be specified")
fD <- function(j){ c(NA, diff(j)) }
var.is.alone <- missing(group) & missing(df)
if (var.is.alone) return(fD(var))
V <- df[, deparse(substitute(var))]
G <- df[, deparse(substitute(group))]
G <- list(G)
D.var <- by(V, G, fD)
unlist(D.var)
}
df <- data.frame(id = rep(1:3, each = 3), X = rpois(9, 10))
df$Xdiff <- firstD(X, id, df)
df
df <- data.frame(id = rep(1:3, each = 3), X = rpois(9, 10), Y = rpois(9, 20))
df$Xdiff <- firstD(X, id, df)
df
df <- data.frame(id = rep(1:3, each = 3), X = rpois(9, 10), Y = rpois(9, 5))
df$Xdiff <- firstD(X, id, df)
df
df <- data.frame(id = rep(1:3, each = 3), X = rpois(9, 10), Y = rpois(9, 5))
df <- ddply(df, "id", mutate, Xdiff = firstD(X), Ydiff = firstD(Y))
df
library(devtools)
library(roxygen2)
setwd("/Users/jgabry/Desktop/COLUMBIA/Stuff_for_Greg/QMSS_Github/Package")
# create("QMSS")
setwd("./QMSS")
document()
setwd("..")
install("QMSS")
library(QMSS)
X <- c(1, 2, 3)
firstD(X)
firstD(X, group = id)
firstD
